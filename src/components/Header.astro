---
// import { Image } from "astro:assets";
// import astroLogo from "../assets/astro.svg";
// import { cartStore } from "../stores/cartStore";

// Get cart count to display in badge
const cartId = Astro.cookies.get("cartId")?.value;
const isLoggedIn = Astro.cookies.has("customerAccessToken");
---

<header class="bg-white shadow-sm sticky top-0 z-100">
	<div class="container mx-auto px-4 py-4 flex justify-between items-center">
		<nav class="hidden md:flex md:flex-1/2 space-x-6">
			<a href="/" class="text-gray-600 hover:text-gray-900">Home</a>
			<a href="/products" class="text-gray-600 hover:text-gray-900">Products</a>
			<a href="/about" class="text-gray-600 hover:text-gray-900">About</a>
			<a href="/contact" class="text-gray-600 hover:text-gray-900">Contact</a>
		</nav>

		<a href="/" class="flex items-center">
			<!-- <Image src={astroLogo} alt="Store Logo" width={115} height={48} /> -->
			<h1>DELEON</h1>
		</a>

		<div class="flex flex-1/2 items-center justify-end space-x-4">
			{
				isLoggedIn ? (
					<div class="relative group">
						<button class="text-gray-600 hover:text-gray-900">
							<svg
								xmlns="http://www.w3.org/2000/svg"
								class="h-6 w-6"
								fill="none"
								viewBox="0 0 24 24"
								stroke="currentColor"
							>
								<path
									stroke-linecap="round"
									stroke-linejoin="round"
									stroke-width="2"
									d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"
								/>
							</svg>
						</button>
						<div class="absolute right-0 mt-2 w-48 bg-white rounded shadow-lg py-2 z-10 hidden group-hover:block">
							<a
								href="/account"
								class="block px-4 py-2 text-gray-800 hover:bg-gray-100"
							>
								My Account
							</a>
							<a
								href="/account/orders"
								class="block px-4 py-2 text-gray-800 hover:bg-gray-100"
							>
								Orders
							</a>
							<button
								id="logout-button"
								class="block w-full text-left px-4 py-2 text-gray-800 hover:bg-gray-100"
							>
								Logout
							</button>
						</div>
					</div>
				) : (
					<a href="/account/login" class="text-gray-600 hover:text-gray-900">
						{/* <svg
							xmlns="http://www.w3.org/2000/svg"
							class="h-6 w-6"
							fill="none"
							viewBox="0 0 24 24"
							stroke="currentColor"
						>
							<path
								stroke-linecap="round"
								stroke-linejoin="round"
								stroke-width="2"
								d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"
							/>
						</svg> */}
						User
					</a>
				)
			}

			<button
				id="cart-button"
				class="text-gray-600 hover:text-gray-900 relative"
			>
				<!-- <svg
					xmlns="http://www.w3.org/2000/svg"
					class="h-6 w-6"
					fill="none"
					viewBox="0 0 24 24"
					stroke="currentColor"
				>
					<path
						stroke-linecap="round"
						stroke-linejoin="round"
						stroke-width="2"
						d="M3 3h2l.4 2M7 13h10l4-8H5.4M7 13L5.4 5M7 13l-2.293 2.293c-.63.63-.184 1.707.707 1.707H17m0 0a2 2 0 100 4 2 2 0 000-4zm-8 2a2 2 0 11-4 0 2 2 0 014 0z"
					></path>
				</svg> -->
				Cart
				<span>[</span>
				<span id="cart-count" class="text-xs">0</span>
				<span>]</span>
			</button>

			<button
				id="mobile-menu-button"
				class="md:hidden text-gray-600 hover:text-gray-900"
			>
				<svg
					xmlns="http://www.w3.org/2000/svg"
					class="h-6 w-6"
					fill="none"
					viewBox="0 0 24 24"
					stroke="currentColor"
				>
					<path
						stroke-linecap="round"
						stroke-linejoin="round"
						stroke-width="2"
						d="M4 6h16M4 12h16M4 18h16"></path>
				</svg>
			</button>
		</div>
	</div>

	<!-- Mobile Menu -->
	<div id="mobile-menu" class="md:hidden hidden bg-white border-t">
		<a href="/" class="block px-4 py-2 text-gray-800 hover:bg-gray-100">Home</a>
		<a href="/products" class="block px-4 py-2 text-gray-800 hover:bg-gray-100"
			>Products</a
		>
		<a href="/about" class="block px-4 py-2 text-gray-800 hover:bg-gray-100"
			>About</a
		>
		<a href="/contact" class="block px-4 py-2 text-gray-800 hover:bg-gray-100"
			>Contact</a
		>
	</div>
</header>

<script>
	import { cartItemsCount, toggleCart } from "../stores/cartStore";
	import { isAuthenticated, clearCustomer } from "../stores/authStore";
	import { logout } from "../shopify/customer";

	// DOM elements
	const cartButton = document.getElementById("cart-button");
	const cartCountBadge = document.getElementById("cart-count");
	const mobileMenuButton = document.getElementById("mobile-menu-button");
	const mobileMenu = document.getElementById("mobile-menu");
	const logoutButton = document.getElementById("logout-button");

	// Subscribe to cart count
	cartItemsCount.subscribe((count) => {
		if (cartCountBadge) {
			cartCountBadge.textContent = count.toString();

			if (count === 0) {
				cartCountBadge.classList.add("hidden");
			} else {
				cartCountBadge.classList.remove("hidden");
			}
		}
	});

	// Initialize cart count from store
	document.addEventListener("DOMContentLoaded", () => {
		const count = cartItemsCount.get();
		if (cartCountBadge) {
			cartCountBadge.textContent = count.toString();

			if (count === 0) {
				cartCountBadge.classList.add("hidden");
			} else {
				cartCountBadge.classList.remove("hidden");
			}
		}
	});

	// Event listeners
	cartButton?.addEventListener("click", () => {
		toggleCart();
	});

	mobileMenuButton?.addEventListener("click", () => {
		mobileMenu?.classList.toggle("hidden");
	});

	// Logout functionality
	logoutButton?.addEventListener("click", async () => {
		try {
			const token = getCookie("customerAccessToken");
			if (token) {
				await logout(token);
			}

			// Clear cookie
			document.cookie =
				"customerAccessToken=; path=/; expires=Thu, 01 Jan 1970 00:00:00 GMT";

			// Redirect to home page
			window.location.href = "/";
		} catch (error) {
			console.error("Failed to logout:", error);
		}
	});

	function getCookie(name: string) {
		const value = `; ${document.cookie}`;
		const parts = value.split(`; ${name}=`);
		if (parts.length === 2) return parts.pop()?.split(";").shift() ?? null;
		return null;
	}
</script>
